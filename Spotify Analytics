For this project, I downloaded Spotify data from Kaggle.
Then I created a table to insert Spotify data into.
Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

Then I inserted the Spotify Data .csv into the table.

Next, I explored the data using the following SQL. 



--What is the average popularity, danceability, energy by artist and track?

SELECT artist_name, track_name, avg(popularity), avg(danceability), avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;
 
 
--Who are the top 10 artists based on popularity? 

SELECT artist_name as Top10_artists
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;


--From this data set how many artists have more than two songs listed ?

SELECT artist_name, COUNT(*) as Songs_listed
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING Songs_listed > 2
ORDER BY Songs_listed DESC;


--What's the average danceability for the 10 most popular songs?

SELECT track_name, avg(danceability)
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY popularity DESC
LIMIT 10;


--What are the top 3 songs that are the most danceable and fast-paced (that have a tempo above 120 bpm)?

SELECT artist_name,track_name, danceability, tempo
FROM BIT_DB.Spotifydata
WHERE tempo > 120
ORDER BY danceability DESC
LIMIT 3;


--What songs have more speechiness than the average speechiness of songs?

SELECT artist_name, track_name, speechiness 
FROM BIT_DB.Spotifydata
WHERE speechiness > (SELECT AVG (speechiness) FROM BIT_DB.Spotifydata)
ORDER BY speechiness DESC;


--Calculate the average popularity for the artists in the Spotify data table. 
Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH popularity_average AS
(SELECT SP.artist_name, AVG(SP.popularity) AS Average_popularity
FROM Spotifydata AS SP
GROUP BY SP.artist_name)
SELECT artist_name, Average_popularity, 'Top Star' AS Label
FROM popularity_average
WHERE Average_popularity >= 90;


